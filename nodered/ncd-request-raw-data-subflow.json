[{"id":"b7ed1ad5f0d327f9","type":"subflow","name":"ncd-raw-request","info":"","category":"","in":[{"x":80,"y":180,"wires":[{"id":"0e9767b97986bbd3"}]}],"out":[{"x":1000,"y":220,"wires":[{"id":"56b673771003f367","port":0}]},{"x":640,"y":240,"wires":[{"id":"8130c91136163d76","port":2}]}],"env":[{"name":"ADDR","type":"str","value":"","ui":{"label":{"en-US":"Sensor Address"},"type":"input","opts":{"types":["str"]}}},{"name":"PROBE_1","type":"bool","value":"true","ui":{"label":{"en-US":"Request Probe 1"},"type":"checkbox"}},{"name":"PROBE_2","type":"bool","value":"false","ui":{"label":{"en-US":"Request Probe 2"},"type":"checkbox"}},{"name":"","type":"str","value":"","ui":{"label":{"en-US":"Note: Probe 1/2 Only Apply for Sensor Type 81 (Two Channel)"},"type":"none"}}],"meta":{},"color":"#A6BBCF","icon":"font-awesome/fa-exchange","status":{"x":1600,"y":100,"wires":[{"id":"8130c91136163d76","port":0},{"id":"40f4f2710d39c709","port":0},{"id":"43557d3920233e64","port":0},{"id":"ea4f8fc97e8c553a","port":0},{"id":"bc9e4fe0d5da3d50","port":0},{"id":"bc9e4fe0d5da3d50","port":1}]}},{"id":"83220296e75dd454","type":"function","z":"b7ed1ad5f0d327f9","name":"ncd-check-and-RAW-request","func":"var type = msg.payload.sensor_type;\nvar probe_1 = env.get('PROBE_1') || false;\nvar probe_2 = env.get('PROBE_2') || false;\nvar property = false;\nvar devices = flow.get('devices');\nvar ramdevices = flow.get('ramdevices');\nvar deviceID = msg.payload.addr;\nif(typeof devices == 'undefined')return;\nif(typeof ramdevices == 'undefined'){\n    ramdevices = [];\n    flow.set('ramdevices',ramdevices);\n    \n}\nif(type == 80 || type == 82 || type == 84){\n    property = msg.payload.sensor_data.hasOwnProperty(\"x_rms_ACC_G\")? true : false;\n}\nelse if (type == 81){\n    property = msg.payload.sensor_data.hasOwnProperty(\"x1_rms_ACC_G\")? true : false;\n}\nif(property){\n    for(let i = 0; i < devices.length; i++){\n        if(deviceID == devices[i]){\n            msg.payload = {};\n            msg.payload.address = deviceID;\n            if(type == 80 || type == 82 || type == 84){\n                msg.payload.data = [0xF4, 0x4F, 0x00, 0x00, 0x54, 0x13]; // send request RAW for type 80 / 82 / 84 \n            }\n            else if (type == 81){\n                if(probe_1 && !probe_2){\n                    msg.payload.data = [0xF4, 0x4F, 0x00, 0x00, 0x50, 0x13, 0x01]; // send request RAW for type 81 probe one\n                }\n                if(!probe_1 && probe_2){\n                    msg.payload.data = [0xF4, 0x4F, 0x00, 0x00, 0x50, 0x13, 0x02]; // send request RAW for type 81 probe two\n                }\n                if(probe_1 && probe_2){\n                    msg.payload.data = [0xF4, 0x4F, 0x00, 0x00, 0x50, 0x13, 0x03]; // send request RAW for type 81 probe one and two\n                }\n            }\n            return msg;\n        }\n    }\n}","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":780,"y":180,"wires":[["56b673771003f367"]]},{"id":"56b673771003f367","type":"delay","z":"b7ed1ad5f0d327f9","name":"","pauseType":"delay","timeout":"100","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":935,"y":180,"wires":[["40f4f2710d39c709"]],"l":false},{"id":"bc9e4fe0d5da3d50","type":"function","z":"b7ed1ad5f0d327f9","name":"ncd-check-mac-address-and-add-address-to-context","func":"let mac = env.get('ADDR');\n// Regular expression to validate the MAC address format\nconst macRegex = /^([0-9A-Fa-f]{2}:){7}[0-9A-Fa-f]{2}$/;\n\nif(mac && mac.length === 23 && macRegex.test(mac)){\n    var newDevices = [mac];\n    var existingDevices = flow.get('devices');\n    \n    if(typeof existingDevices == 'undefined'){\n        flow.set('devices', [newDevices]);\n        msg.payload = ({ fill: \"green\", shape: \"ring\", text: \"Address Added\" });\n        return [msg, null];\n    }else{\n        for(let newDevice of newDevices){\n            let exists = false;\n            for(let existingDevice of existingDevices){\n                if(newDevice == existingDevice){\n                    exists = true;\n                    break;\n                }\n            }\n            if(!exists){\n                existingDevices.push(newDevice);\n            } \n        }\n    }\n    flow.set('devices',existingDevices);\n    msg.payload = ({ fill: \"green\", shape: \"ring\", text: \"Address Added\" });\n    return [msg, null];\n}\nmsg.payload = ({ fill: \"red\", shape: \"ring\", text: \"Invalid Address\" });\nreturn [null, msg];","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":980,"y":100,"wires":[["69cafc64b280d381"],[]]},{"id":"c716d1f2b4375834","type":"inject","z":"b7ed1ad5f0d327f9","name":"","props":[],"repeat":"","crontab":"","once":true,"onceDelay":"1","topic":"","x":735,"y":100,"wires":[["bc9e4fe0d5da3d50"]],"l":false},{"id":"8130c91136163d76","type":"function","z":"b7ed1ad5f0d327f9","name":"ncd-check-sensor-type-and-raw","func":"let type = msg.payload.sensor_type;\nif(type == 80 || type == 81 || type == 82 || type == 84){ // check type\n    if(msg.payload.sensor_data.mode == 2){ // check mode [Processed + raw on request]\n        return [null, msg, null];\n    }\n    else if (msg.payload.sensor_data.hasOwnProperty('probe') || msg.payload.sensor_data.hasOwnProperty('time_id')){\n        \n        return [null, null, msg];\n    }\n    else{\n         msg.payload = ({ fill: \"red\", shape: \"ring\", text: \"Invalid Mode\" });\n        return [msg, null, null];\n    }\n}\nmsg.payload = ({ fill: \"red\", shape: \"ring\", text: \"Error Type\" });\nreturn [msg, null];","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":470,"y":180,"wires":[[],["83220296e75dd454"],["ea4f8fc97e8c553a"]]},{"id":"0e9767b97986bbd3","type":"switch","z":"b7ed1ad5f0d327f9","name":"ncd-filter-sensor-data","property":"topic","propertyType":"msg","rules":[{"t":"eq","v":"sensor_data","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":220,"y":180,"wires":[["8130c91136163d76"]]},{"id":"40f4f2710d39c709","type":"function","z":"b7ed1ad5f0d327f9","name":"ncd-sending-status","func":"msg.payload = ({ fill: \"yellow\", shape: \"ring\", text: \"Sending Request\" });\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1070,"y":180,"wires":[["69cafc64b280d381"]]},{"id":"69cafc64b280d381","type":"delay","z":"b7ed1ad5f0d327f9","name":"","pauseType":"delay","timeout":"2","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":1275,"y":60,"wires":[["43557d3920233e64"]],"l":false},{"id":"43557d3920233e64","type":"function","z":"b7ed1ad5f0d327f9","name":"Ready","func":"msg.payload = ({ fill: \"green\", shape: \"dot\", text: \"Ready\" });\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1470,"y":60,"wires":[[]]},{"id":"ea4f8fc97e8c553a","type":"function","z":"b7ed1ad5f0d327f9","name":"receiving-raw-status","func":"msg.payload = ({ fill: \"blue\", shape: \"ring\", text: \"Receiving RAW\" });\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1060,"y":260,"wires":[["69cafc64b280d381"]]},{"id":"14551fead959f0d6","type":"subflow:b7ed1ad5f0d327f9","z":"f5a811930e396091","name":"","env":[{"name":"ADDR","value":"00:13:a2:00:42:53:64:53","type":"str"},{"name":"TYPE","value":"","type":"str"},{"name":"Type","value":"","type":"str"}],"x":470,"y":420,"wires":[["405e4c5680b0344b","3ca9e44b19f9cac7","feaba9852881b6d5"],["67e93d0191600ab4"]],"outputLabels":["Request","RAW Data"]},{"id":"405e4c5680b0344b","type":"link out","z":"f5a811930e396091","name":"link out 1","mode":"link","links":["6cc8592be5ac73db"],"x":625,"y":420,"wires":[]},{"id":"6cc8592be5ac73db","type":"link in","z":"f5a811930e396091","name":"link in 1","links":["405e4c5680b0344b"],"x":865,"y":420,"wires":[["27329809d9d2b09a"]]},{"id":"3ca9e44b19f9cac7","type":"debug","z":"f5a811930e396091","name":"Request command","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload.data","targetType":"msg","statusVal":"","statusType":"auto","x":700,"y":320,"wires":[]},{"id":"feaba9852881b6d5","type":"debug","z":"f5a811930e396091","name":"Request Address","active":true,"tosidebar":false,"console":false,"tostatus":true,"complete":"msg.payload.address","targetType":"msg","statusVal":"msg.payload.address","statusType":"auto","x":700,"y":360,"wires":[]},{"id":"67e93d0191600ab4","type":"debug","z":"f5a811930e396091","name":"RAW Data","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":680,"y":460,"wires":[]},{"id":"27329809d9d2b09a","type":"debug","z":"f5a811930e396091","name":"debug 3","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":980,"y":420,"wires":[]}]
